{{!
    This file is part of Moodle - http://moodle.org/

    Moodle is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Moodle is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
}}
{{!
    @template theme_boost/columns2

    Admin time setting template.

    Boost 2 column layout template.

    Context variables required for this template:
    * sitename - The name of the site
    * output - The core renderer for the page
    * bodyattributes - attributes for the body tag as a string of html attributes
    * sidepreblocks - HTML for the blocks
    * hasblocks - true if there are blocks on this page
    * navdraweropen - true if the nav drawer should be open on page load
    * regionmainsettingsmenu - HTML for the region main settings menu
    * hasregionmainsettingsmenu - There is a region main settings menu on this page.

    Example context (json):
    {
        "sitename": "Moodle",
        "output": {
            "doctype": "<!DOCTYPE html>",
            "page_title": "Test page",
            "favicon": "favicon.ico",
            "main_content": "<h1>Headings make html validators happier</h1>"
         },
        "bodyattributes":"",
        "sidepreblocks": "<h2>Blocks html goes here</h2>",
        "hasblocks":true,
        "navdraweropen":true,
        "regionmainsettingsmenu": "",
        "hasregionmainsettingsmenu": false
    }
}}
{{{ output.doctype }}}
<html {{{ output.htmlattributes }}}>
<head>
    <title>{{{ output.page_title }}}</title>
    <link rel="shortcut icon" href="{{{ output.favicon }}}" />
    {{#output.headingfont}} <link href="//fonts.googleapis.com/css?family={{output.headingfont}}" rel="stylesheet" type="text/css"> {{/output.headingfont}}
    {{#output.pagefont}} <link href="//fonts.googleapis.com/css?family={{output.pagefont}}" rel="stylesheet" type="text/css"> {{/output.pagefont}}
    {{{ output.standard_head_html }}}
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>

<body {{{ bodyattributes }}}>

<div id="page-wrapper">

    {{{ output.standard_top_of_body_html }}}

    {{>theme_stardust/header}}

    <div id="page" class="container-fluid">

        {{{ output.headerimage }}}

        <div id="learningcontent">

        {{{ output.teacherdash }}}

            <!-- {{{ output.full_header }}} -->

            <div id="page-content" class="row">
                <div id="region-main-box" class="">

                    {{>theme_stardust/pagemy}}

                    {{#hasregionmainsettingsmenu}}
                    <div id="region-main-settings-menu" class="hidden-print {{#hasblocks}}has-blocks{{/hasblocks}}">
                        <div> {{{ output.region_main_settings_menu }}} </div>
                    </div>
                    {{/hasregionmainsettingsmenu}}
                    <section id="region-main" {{#hasblocks}}class="has-blocks"{{/hasblocks}}>
                        <!-- <div class="card card-block"> -->
                        {{#hasregionmainsettingsmenu}}
                            <div class="region_main_settings_menu_proxy"></div>
                        {{/hasregionmainsettingsmenu}}
                        <div class = "display__none">
                        {{{ output.course_content_header }}}
                        {{{ output.main_content }}}
                        {{{ output.course_content_footer }}}
                        </div>
                </div>

                    </section>
                    {{#hasblocks}}
                        <section data-region="blocks-column" class="hidden-print">
                            {{{ sidepreblocks }}}
                        </section>
                    {{/hasblocks}}
                </div>
            </div>
            {{{ output.activity_navigation }}}
        </div>
    </div>
    {{#hasfhsdrawer}}
    {{> theme_boost/nav-drawer }}
    {{/hasfhsdrawer}}
</div>

{{#showbacktotop}}
<a href="#" id="back-to-top" class="btn btn-primary btn-lg" role="button" title="{{#str}}backtotop, theme_fordson{{/str}}"><i class="fa fa-chevron-circle-up" aria-hidden="true"></i></a>
{{/showbacktotop}}

{{>theme_stardust/footer}}

</body>
</html>
{{#js}}
require(['theme_boost/loader']);
require(['jquery','theme_boost/tooltip'], function($){$('[data-tooltip="tooltip"]').tooltip()});
{{#hasfhsdrawer}}
require(['theme_boost/drawer'], function(mod) {
    mod.init();
});
{{/hasfhsdrawer}}

// cards course filter
`use strict`;

const container = document.querySelector(`.tab-pane.active ul`);
const courses = Array.from(container.querySelectorAll(`li`));
const filters = document.querySelector(`.filters`);

const azfilter = document.querySelector(`.filters .az`);
const zafilter = document.querySelector(`.filters .za`);

const filterDate = document.querySelector(`.filter-date`);
const filterAbc = document.querySelector(`.filter-abc`);

const compareByCourseName = (a, b) => {
  return (
    a.dataset.coursename > b.dataset.coursename ?  1 :
    a.dataset.coursename < b.dataset.coursename ? -1 :
    0
  )
}

const compareNumeric = (a, b) => {
  return Number(a.dataset.date) - Number(b.dataset.date);
}


//(function (){
  if (azfilter){
    if (azfilter.classList.contains(`filter-abc`)){
      courses.sort(compareByCourseName);
    } else if (azfilter.classList.contains(`filter-date`)) {
      courses.sort(compareNumeric);
    }
  } else if (zafilter){
    if (zafilter.classList.contains(`filter-abc`)){
      courses.sort(compareByCourseName);
    } else if (zafilter.classList.contains(`filter-date`)) {
      courses.sort(compareNumeric);
    }
  }
//})();

filters.addEventListener('click', function(e){
  //e.target.classList.add(`active`);
  var filterstate, direction;
  if (e.target.classList.contains(`filter-abc`)) {
    filterstate = 'filter-abc';
    if (filterDate.classList.contains('az') || filterDate.classList.contains('za')){
      filterDate.classList.remove('az');
      filterDate.classList.remove('za');
    }
    if (e.target.classList.contains('az')){
      e.target.classList.remove('az');
      e.target.classList.add('za');
      courses.sort(compareByCourseName).reverse();
      direction = 0; // za
    } else {
      e.target.classList.add('az');
      courses.sort(compareByCourseName);
      direction = 1; // az
    }
  } else if  (e.target.classList.contains(`filter-date`)) {
    filterstate = 'filter-date';
    if (filterAbc.classList.contains('az') || filterAbc.classList.contains('za')){
      filterAbc.classList.remove('az');
      filterAbc.classList.remove('za');
    }
    if (e.target.classList.contains('az')){
      e.target.classList.remove('az');
      e.target.classList.add('za');
      courses.sort(compareNumeric).reverse();
      direction = 0; // za
    } else {
      e.target.classList.add('az');
      courses.sort(compareNumeric);
      direction = 1; // az
    }
  }

  container.innerHTML = ``;
  courses.forEach((course)=>{
    container.appendChild(course);
  });

  $.ajax({
    type: "POST",
    async: true,
    url: M.cfg.wwwroot + '/theme/stardust/ajax.php',
    data:{
      method: 'save_course_filter',
      contextid: M.cfg.contextid,
      sesskey: M.cfg.sesskey,
      filterstate: filterstate,
      direction: direction
    }
  });
});
{{/js}}
